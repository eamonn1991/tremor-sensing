apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'

group = 'com.punchthrough.bean.sdk'
version = "2.1.1"

android {

    compileSdkVersion 22
    buildToolsVersion '23.0.1'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 21
        versionCode 1
        versionName version
        buildConfigField "String", "BEAN_NAME", beanName
        buildConfigField "String", "BEAN_ADDRESS", beanAddress
    }

    defaultPublishConfig "release"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
    }

    testOptions {

        unitTests.returnDefaultValues = true

        unitTests.all {

            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }

        }
    }

    packagingOptions {
        pickFirst 'META-INF/DEPENDENCIES'
        pickFirst 'META-INF/NOTICE'
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'META-INF/NOTICE.txt'
        pickFirst 'META-INF/maven/commons-io/commons-io/pom.xml'
        pickFirst 'META-INF/maven/commons-io/commons-io/pom.properties'
    }
}


dependencies {

    // Core dependencies
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup.okio:okio:1.0.0'
    compile 'com.github.frankiesardo:auto-parcel:0.2'
    compile 'org.eclipse.birt.runtime.3_7_1:org.apache.commons.codec:1.3.0'
    apt 'com.github.frankiesardo:auto-parcel-processor:0.2'

    // Unit test dependencies
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.powermock:powermock-core:1.6.4'
    testCompile 'org.powermock:powermock-module-junit4:1.6.4'
    testCompile 'org.powermock:powermock-api-mockito:1.6.4'
    testCompile 'org.assertj:assertj-core:1.7.1'

    // Instrumentation test dependencies
    androidTestCompile 'org.apache.commons:commons-io:1.3.2'
    androidTestCompile 'org.assertj:assertj-core:1.7.1'

}

// Generate JAR from SDK files
// http://stackoverflow.com/a/19967914/254187
android.libraryVariants.all { variant ->
    task("generate${variant.name}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
    }

    task("javadoc${variant.name}", type: Jar) {
        classifier = "javadoc"
        description "Bundles Javadoc into a JAR file for $variant.name."
        from tasks["generate${variant.name}Javadoc"]
    }

    task("jar${variant.name}", type: Jar) {
        description "Bundles compiled .class files into a JAR file for $variant.name."
        dependsOn variant.javaCompile
        from variant.javaCompile.destinationDir
        exclude '**/R.class', '**/R$*.class', '**/R.html', '**/R.*.html'
    }
}

apply from: '../maven-publish.gradle'
